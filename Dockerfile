# Generated by precisionFDA exporter (v1.0.3) on 2018-06-14 16:41:10 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: clamms_call_cnvs, revision: 12, authored by: evan.maxwell.2
# https://precision.fda.gov/apps/app-F0ZvB2Q0Yv41P396yvzqp6f8

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Update apt-get
RUN DEBIAN_FRONTEND=noninteractive apt-get update

# Download app assets
RUN curl https://dl.dnanex.us/F/D/ZvK098K2q3zXkp56FyFby8kfjJpJgP2fZZyYkk99/bedtools-2.25.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/k046g7K1XYxxZq06GxG6k3XX82k982q3F8zYbvPx/clamms_callcnvs_assets.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"sample_normalized_coverage_bed_file\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Normalized\\ coverage\\ BED\\ file\\\",\\\"help\\\":\\\"BED\\ file\\ of\\ pre-computed\\ normalized\\ coverage\\ for\\ the\\ test\\ sample\\\"\\},\\{\\\"name\\\":\\\"reference_model_file\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Reference\\ model\\ file\\\",\\\"help\\\":\\\"Pre-computed\\ model\\ file\\ fit\\ on\\ a\\ reference\\ panel\\\"\\},\\{\\\"name\\\":\\\"sex\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Sample\\ sex\\\",\\\"help\\\":\\\"\\\\\\\"M\\\\\\\"\\ or\\ \\\\\\\"F\\\\\\\"\\ for\\ assigning\\ expected\\ ploidy\\ on\\ sex\\ chromosomes.\\ If\\ not\\ provided,\\ CNVs\\ will\\ not\\ be\\ called\\ on\\ sex\\ chormosomes.\\\",\\\"choices\\\":\\[\\\"M\\\",\\\"F\\\"\\]\\},\\{\\\"name\\\":\\\"cnv_rate\\\",\\\"class\\\":\\\"float\\\",\\\"optional\\\":true,\\\"label\\\":\\\"HMM\\ rate\\ parameter\\ for\\ CNVs\\\",\\\"help\\\":\\\"Reflects\\ the\\ expected\\ rate\\ of\\ CNVs\\ across\\ the\\ exome.\\ Lower\\ values\\ increase\\ sensitivity.\\\",\\\"default\\\":1.0e-07\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"cnv_bed_file\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"CNV\\ calls\\ BED\\ file\\\",\\\"help\\\":\\\"BED\\ file\\ of\\ CNVs\\ called\\ by\\ CLAMMS\\ on\\ the\\ test\\ sample\\\"\\}\\],\\\"internet_access\\\":false,\\\"instance_type\\\":\\\"baseline-2\\\"\\},\\\"assets\\\":\\[\\\"file-Bk5K5yj0qVb1VgP6pVJPyv8p\\\",\\\"file-F0QvKvQ0V7B8kJz2gxb7j54f\\\"\\],\\\"packages\\\":\\[\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"sample_name\\=\\$\\{sample_normalized_coverage_bed_file_name\\%.normalized.coverage.bed\\}\\\\nout_path\\=\\\\\\\"\\$\\{sample_name\\}.cnv.bed\\\\\\\"\\\\n\\\\nif\\ \\[\\ -z\\ \\\\\\\"\\$sex\\\\\\\"\\ \\]\\;\\ then\\\\n\\ \\ call_cnv\\ \\\\\\\"\\$sample_normalized_coverage_bed_file_path\\\\\\\"\\ \\\\\\\"\\$reference_model_file_path\\\\\\\"\\ --cnv_rate\\ \\\\\\\"\\$cnv_rate\\\\\\\"\\ \\\\u003e\\ \\$\\{sample_name\\}.autosome_cnv.bed\\\\n\\ \\ out_path\\=\\\\\\\"\\$\\{sample_name\\}.autosome_cnv.bed\\\\\\\"\\\\nelse\\\\n\\ \\ call_cnv\\ \\\\\\\"\\$sample_normalized_coverage_bed_file_path\\\\\\\"\\ \\\\\\\"\\$reference_model_file_path\\\\\\\"\\ --sex\\ \\\\\\\"\\$sex\\\\\\\"\\ --cnv_rate\\ \\\\\\\"\\$cnv_rate\\\\\\\"\\ \\\\u003e\\ \\$\\{sample_name\\}.cnv.bed\\\\nfi\\\\n\\\\nemit\\ cnv_bed_file\\ \\$out_path\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work